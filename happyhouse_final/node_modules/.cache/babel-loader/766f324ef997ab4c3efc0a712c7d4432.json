{"ast":null,"code":"import _asyncToGenerator from \"C:/SSAFY/workspace/vuejs/happyhouse_final/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/SSAFY/workspace/vuejs/happyhouse_final/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport http from \"@/api/http\";\nimport \"url-search-params-polyfill\";\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nexport default {\n  name: \"MyArea\",\n  data: function data() {\n    return {\n      sidoCode: null,\n      gugunCode: null,\n      dongCode: null,\n      markers: [],\n      map: null,\n      ps: null,\n      infowindow: null,\n      customOverlay: null,\n      geocoder: null,\n      condition: false\n    };\n  },\n  created: function created() {\n    this.CLEAR_SIDO_LIST();\n    this.getSido();\n    this.shopList();\n    this.$store.commit(\"SET_NOW_SHOP\");\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      var script = document.createElement(\"script\");\n      /* global kakao */\n\n      script.onload = function () {\n        return kakao.maps.load(_this.initMap);\n      };\n\n      script.src = \"http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=034dcc5ce4d542a740e6d5514a14db3e&libraries=services\";\n      document.head.appendChild(script);\n    }\n\n    console.log(this.sidos);\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions([\"getSido\", \"getGugun\", \"getDong\"])), mapMutations([\"CLEAR_SIDO_LIST\", \"CLEAR_GUGUN_LIST\", \"CLEAR_DONG_LIST\", \"CLEAR_SHOP_LIST\"])), {}, {\n    func: function func() {\n      this.displayMarkers(this.$store.getters.getShopList);\n    },\n    gugunList: function gugunList() {\n      console.log(this.sidoCode);\n      this.CLEAR_GUGUN_LIST();\n      this.gugunCode = null;\n      if (this.sidoCode) this.getGugun(this.sidoCode);\n    },\n    dongList: function dongList() {\n      console.log(this.gugunCode, \"??\");\n      this.CLEAR_DONG_LIST();\n      console.log(this.gugunCode, \"??\");\n      this.dongCode = null;\n\n      if (this.gugunCode) {\n        this.getDong(this.gugunCode);\n      }\n    },\n    mst: function mst() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var arrList, obj, _yield$http$post, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                arrList = [];\n                document.querySelectorAll(\"#checkedList:checked\").forEach(function (element) {\n                  console.log(element.dataset.param);\n                  arrList.push(element.dataset.param);\n                });\n                console.log(arrList);\n\n                if (!(arrList.length == 0)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                alert(\"가고 싶은 상점을 체크하세요\");\n                _context.next = 24;\n                break;\n\n              case 7:\n                obj = {\n                  dong: _this2.dongCode,\n                  arr: arrList\n                };\n                _context.prev = 8;\n                _context.next = 11;\n                return http.post(\"/shops/MST\", obj);\n\n              case 11:\n                _yield$http$post = _context.sent;\n                data = _yield$http$post.data;\n                console.log(data);\n                _context.next = 16;\n                return _this2.$store.dispatch(\"mst\", data);\n\n              case 16:\n                document.querySelectorAll(\"#checkedList\").forEach(function (element) {\n                  element.checked = true;\n                  element.disabled = true;\n                });\n\n                _this2.displayMarkers(_this2.$store.getters.getShopList);\n\n                _this2.condition = true;\n                _context.next = 24;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](8);\n                console.error(_context.t0);\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[8, 21]]);\n      }))();\n    },\n    // async getDongName() {\n    //   var dong = this.$store.state.user.dongCode;\n    //   try {\n    //     let { data } = await http.get(\"/shops/getDongCodes/\" + dong); // params: params shorthand property, let response 도 제거\n    //     console.log(data);\n    //     var str =\n    //       \" \" + data.sidoName + \" \" + data.gugunName + \" \" + data.dongName;\n    //     document.querySelector(\"#myAreaName\").innerHTML = str;\n    //   } catch (error) {\n    //     console.error(error);\n    //   }\n    // },\n    shopList: function shopList() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this3.CLEAR_SHOP_LIST();\n\n                _this3.condition = false;\n                document.querySelectorAll(\"#checkedList\").forEach(function (element) {\n                  element.checked = false;\n                  element.disabled = false;\n                });\n                console.log(_this3.dongCode, \"샵리스트\");\n\n                if (!_this3.dongCode) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 7;\n                return _this3.$store.dispatch(\"shopList\", _this3.dongCode);\n\n              case 7:\n                _this3.displayMarkers(_this3.$store.getters.getShopList);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    initMap: function initMap() {\n      // 마커를 담을 배열입니다\n      //var markers = [];\n      var mapContainer = document.getElementById(\"map\"); // 지도를 표시할 div\n\n      var mapOption = {\n        center: new kakao.maps.LatLng(37.566826, 126.9786567),\n        // 지도의 중심좌표\n        level: 3 // 지도의 확대 레벨\n\n      }; // 지도를 생성합니다\n\n      this.map = new kakao.maps.Map(mapContainer, mapOption); // 장소 검색 객체를 생성합니다\n\n      this.ps = new kakao.maps.services.Places(); // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n\n      this.infowindow = new kakao.maps.InfoWindow({\n        zIndex: 1\n      }); // 커스텀 오버레이를 생성합니다\n\n      this.customOverlay; //주소-좌표 변환 객체를 생성합니다\n\n      this.geocoder = new kakao.maps.services.Geocoder();\n    },\n    displayMarkers: function displayMarkers(places) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var fragment, bounds, listStr, self, i, placePosition, marker, itemEl;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                fragment = document.createDocumentFragment();\n                bounds = new kakao.maps.LatLngBounds();\n                listStr = \"\"; //console.log(places.length);\n                // 지도에 표시되고 있는 마커를 제거합니다\n\n                _this4.removeMarker();\n\n                self = _this4;\n\n                for (i = 0; i < places.length; i++) {\n                  placePosition = new kakao.maps.LatLng(places[i].lat, places[i].lng);\n                  marker = _this4.addMarker(placePosition, i);\n                  itemEl = _this4.getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n                  //console.log(i);\n                  // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n                  // LatLngBounds 객체에 좌표를 추가합니다\n\n                  bounds.extend(placePosition); // 마커와 검색결과 항목에 mouseover 했을때\n                  // 해당 장소에 인포윈도우에 장소명을 표시합니다\n                  // mouseout 했을 때는 인포윈도우를 닫습니다\n\n                  (function (marker, title, code, place, map) {\n                    kakao.maps.event.addListener(marker, \"click\", function () {\n                      self.displayInfowindow(marker, title, place);\n                    });\n                    kakao.maps.event.addListener(map, \"click\", function () {\n                      console.log(self.customOverlay);\n                      self.customOverlay.setMap(null);\n                    });\n\n                    itemEl.onmouseover = function () {\n                      self.displayInfowindow(marker, title);\n                    };\n\n                    itemEl.onmouseout = function () {\n                      self.customOverlay.setMap(null);\n                    };\n                  })(marker, places[i].shopName, places[i].shopKind, places[i], _this4.map);\n\n                  fragment.appendChild(itemEl);\n                } // 마커를 생성하고 지도에 표시합니다\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\n\n                _this4.map.setBounds(bounds);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    addMarker: function addMarker(position, idx, title) {\n      var imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\",\n          // 마커 이미지 url, 스프라이트 이미지를 씁니다\n      imageSize = new kakao.maps.Size(36, 37),\n          // 마커 이미지의 크기\n      imgOptions = {\n        spriteSize: new kakao.maps.Size(36, 691),\n        // 스프라이트 이미지의 크기\n        spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10),\n        // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n        offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\n      },\n          markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n          marker = new kakao.maps.Marker({\n        position: position,\n        // 마커의 위치\n        image: markerImage\n      });\n      marker.setMap(this.map); // 지도 위에 마커를 표출합니다\n\n      this.markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n      return marker;\n    },\n    removeMarker: function removeMarker() {\n      for (var i = 0; i < this.markers.length; i++) {\n        this.markers[i].setMap(null);\n      }\n\n      this.markers = [];\n    },\n    getListItem: function getListItem(index, place) {\n      var el = document.createElement(\"li\");\n      var itemStr = \"\\n\\t\\t<span class=\\\"markerbg marker_\".concat(index + 1, \"></span>\\n\\t\\t<div class=\\\"info\\\"><h5>\").concat(place.aptName, \"</h5> <button>\\uAD00\\uC2EC\\uB4F1\\uB85D</button>\\n\\t\\t<span>\").concat(place.sidoName, \" \").concat(place.gugunName, \" \").concat(place.dongName, \" \").concat(place.jibun, \"</span>\\n\\t\");\n      el.innerHTML = itemStr;\n      el.className = \"item\";\n      return el;\n    },\n    displayInfowindow: function displayInfowindow(marker, title, place) {\n      var content = \"\\n\\t\\t<div class=\\\"overlaybox\\\">\\n\\t\\t\\t<div class=\\\"boxtitle\\\">\".concat(title, \"</div>\\n\\t\\t\\t<div class=\\\"first\\\"><img src=\\\"/img/apt.png\\\" style=\\\"width:247px; height:136px;\\\" alt=\\\"\\\"></div>\\n\\t\\t\\t<ul>\\n\\t\\t\\t\\t<li class=\\\"up\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"title\\\">\\uC774\\uB984</span>\\n\\t\\t\\t\\t\\t<span class=\\\"count\\\">\").concat(place.buildYear, \"</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<span class=\\\"title\\\">\\uC8FC\\uC18C</span>\\n\\t\\t\\t\\t\\t<span class=\\\"count\\\">\").concat(place.roadAddress, \"</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<span class=\\\"title\\\">\\uCD5C\\uC2E0\\uAC70\\uB798\\uAE08\\uC561</span>\\n\\t\\t\\t\\t\\t<span class=\\\"count\\\">\").concat(place.recentPrice, \"</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<span class=\\\"last\\\" id=\\\"recenthistor\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\uC544\\uD30C\\uD2B8\\uC815\\uBCF4 update</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\");\n      var position = new kakao.maps.LatLng(marker.getPosition().getLat() + 0.00033, marker.getPosition().getLng() - 0.00003);\n      this.customOverlay = new kakao.maps.CustomOverlay({\n        position: position,\n        content: content,\n        xAnchor: 0.3,\n        yAnchor: 0.91\n      });\n      this.customOverlay.setMap(this.map);\n    },\n    removeAllChildNods: function removeAllChildNods(el) {\n      while (el.hasChildNodes()) {\n        el.removeChild(el.lastChild);\n      }\n    }\n  }),\n  computed: _objectSpread(_objectSpread({}, mapState([\"sidos\", \"guguns\", \"dongs\"])), {}, {\n    listGetters: function listGetters() {\n      return this.$store.getters.getShopList; // no getBoardList()\n    }\n  })\n};","map":{"version":3,"mappings":"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","names":["name","data","sidoCode","gugunCode","dongCode","markers","map","ps","infowindow","customOverlay","geocoder","condition","created","mounted","script","document","console","methods","mapActions","mapMutations","func","gugunList","dongList","mst","arrList","alert","obj","dong","arr","http","element","shopList","initMap","center","level","zIndex","displayMarkers","places","fragment","bounds","listStr","self","placePosition","marker","itemEl","kakao","addMarker","position","idx","title","imageSize","imgOptions","spriteSize","spriteOrigin","offset","markerImage","imageSrc","image","removeMarker","getListItem","index","place","el","displayInfowindow","content","xAnchor","yAnchor","removeAllChildNods","computed","mapState","listGetters"],"sourceRoot":"src/views","sources":["ShopView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Page Header Start -->\n    <div\n      class=\"container-fluid page-header py-6 wow fadeIn\"\n      data-wow-delay=\"0.1s\"\n    >\n      <div class=\"container text-center pt-5 pb-3\">\n        <h1 class=\"display-4 text-white animated slideInDown mb-3\">\n          상가 검색\n        </h1>\n      </div>\n    </div>\n    <!-- Page Header End -->\n    <div class=\"container\">\n      <section id=\"index_section\">\n        <div class=\"card col-sm-12 mt-1\" style=\"min-height: 850px\">\n          <div class=\"card-body\">\n            <div class=\"form-group form-inline justify-content-center\">\n              <b-row class=\"mt-4 mb-4 text-center\">\n                <b-col class=\"sm-3\">\n                  <b-form-select\n                    v-model=\"sidoCode\"\n                    :options=\"sidos\"\n                    @change=\"gugunList\"\n                  ></b-form-select>\n                </b-col>\n                <b-col class=\"sm-3\">\n                  <b-form-select\n                    v-model=\"gugunCode\"\n                    :options=\"guguns\"\n                    @change=\"dongList\"\n                  ></b-form-select>\n                </b-col>\n                <b-col class=\"sm-3\">\n                  <b-form-select\n                    v-model=\"dongCode\"\n                    :options=\"dongs\"\n                    @change=\"shopList\"\n                  ></b-form-select>\n                </b-col>\n              </b-row>\n              <button class=\"btn btn-outline-primary\" @click=\"func\">\n                지도 찾기\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-primary\"\n                @click=\"mst\"\n                v-if=\"!condition\"\n              >\n                최적경로탐색\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-primary\"\n                @click=\"shopList\"\n                v-if=\"condition\"\n              >\n                원래대로\n              </button>\n            </div>\n            <hr />\n            <div style=\"height: 350px; margin-bottom: 2%; overflow: auto\">\n              <table class=\"table mt-2 table-striped\">\n                <colgroup>\n                  <col width=\"50\" />\n                  <col width=\"150\" />\n                  <col width=\"150\" />\n                  <col width=\"*\" />\n                  <col width=\"120\" />\n                  <col width=\"120\" />\n                </colgroup>\n                <thead>\n                  <tr>\n                    <!--0506추가  -->\n                    <th></th>\n                    <th>상점 종류</th>\n                    <th>상점 이름</th>\n                    <th class=\"text-center\">주소</th>\n                    <th>위도</th>\n                    <th>경도</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr\n                    style=\"cursor: pointer\"\n                    v-for=\"(shop, index) in listGetters\"\n                    v-bind:key=\"index\"\n                  >\n                    <td>\n                      <input\n                        type=\"checkbox\"\n                        id=\"checkedList\"\n                        name=\"isSearch\"\n                        :data-param=\"index\"\n                      />\n                    </td>\n                    <td>{{ shop.shopKind }}</td>\n                    <td>{{ shop.shopName }}</td>\n                    <td>{{ shop.roadAddress }}</td>\n                    <td>{{ shop.lat }}</td>\n                    <td>{{ shop.lng }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div id=\"map\" style=\"width: 100%; height: 500px\"></div>\n          </div>\n        </div>\n      </section>\n      <div id=\"map\" style=\"height: 500px\"></div>\n    </div>\n  </div>\n</template>\n<script>\nimport http from \"@/api/http\";\nimport \"url-search-params-polyfill\";\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nexport default {\n  name: \"MyArea\",\n  data() {\n    return {\n      sidoCode: null,\n      gugunCode: null,\n      dongCode: null,\n      markers: [],\n      map: null,\n      ps: null,\n      infowindow: null,\n      customOverlay: null,\n      geocoder: null,\n      condition: false,\n    };\n  },\n  created() {\n    this.CLEAR_SIDO_LIST();\n    this.getSido();\n    this.shopList();\n\n    this.$store.commit(\"SET_NOW_SHOP\");\n  },\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      script.src =\n        \"http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=034dcc5ce4d542a740e6d5514a14db3e&libraries=services\";\n      document.head.appendChild(script);\n    }\n    console.log(this.sidos);\n  },\n\n  methods: {\n    ...mapActions([\"getSido\", \"getGugun\", \"getDong\"]),\n    ...mapMutations([\n      \"CLEAR_SIDO_LIST\",\n      \"CLEAR_GUGUN_LIST\",\n      \"CLEAR_DONG_LIST\",\n      \"CLEAR_SHOP_LIST\",\n    ]),\n    func() {\n      this.displayMarkers(this.$store.getters.getShopList);\n    },\n    gugunList() {\n      console.log(this.sidoCode);\n      this.CLEAR_GUGUN_LIST();\n      this.gugunCode = null;\n      if (this.sidoCode) this.getGugun(this.sidoCode);\n    },\n    dongList() {\n      console.log(this.gugunCode, \"??\");\n      this.CLEAR_DONG_LIST();\n      console.log(this.gugunCode, \"??\");\n      this.dongCode = null;\n      if (this.gugunCode) {\n        this.getDong(this.gugunCode);\n      }\n    },\n    async mst() {\n      var arrList = [];\n      document.querySelectorAll(\"#checkedList:checked\").forEach((element) => {\n        console.log(element.dataset.param);\n        arrList.push(element.dataset.param);\n      });\n      console.log(arrList);\n      if (arrList.length == 0) {\n        alert(\"가고 싶은 상점을 체크하세요\");\n      } else {\n        var obj = {\n          dong: this.dongCode,\n          arr: arrList,\n        };\n\n        try {\n          let { data } = await http.post(\"/shops/MST\", obj);\n          console.log(data);\n          await this.$store.dispatch(\"mst\", data);\n          document.querySelectorAll(\"#checkedList\").forEach((element) => {\n            element.checked = true;\n            element.disabled = true;\n          });\n          this.displayMarkers(this.$store.getters.getShopList);\n          this.condition = true;\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    },\n    // async getDongName() {\n    //   var dong = this.$store.state.user.dongCode;\n\n    //   try {\n    //     let { data } = await http.get(\"/shops/getDongCodes/\" + dong); // params: params shorthand property, let response 도 제거\n    //     console.log(data);\n    //     var str =\n    //       \" \" + data.sidoName + \" \" + data.gugunName + \" \" + data.dongName;\n    //     document.querySelector(\"#myAreaName\").innerHTML = str;\n    //   } catch (error) {\n    //     console.error(error);\n    //   }\n    // },\n    async shopList() {\n      this.CLEAR_SHOP_LIST();\n      this.condition = false;\n      document.querySelectorAll(\"#checkedList\").forEach((element) => {\n        element.checked = false;\n        element.disabled = false;\n      });\n      console.log(this.dongCode, \"샵리스트\");\n      if (this.dongCode) {\n        await this.$store.dispatch(\"shopList\", this.dongCode);\n        this.displayMarkers(this.$store.getters.getShopList);\n      }\n    },\n    initMap() {\n      // 마커를 담을 배열입니다\n      //var markers = [];\n\n      var mapContainer = document.getElementById(\"map\"); // 지도를 표시할 div\n      var mapOption = {\n        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\n        level: 3, // 지도의 확대 레벨\n      };\n\n      // 지도를 생성합니다\n      this.map = new kakao.maps.Map(mapContainer, mapOption);\n\n      // 장소 검색 객체를 생성합니다\n      this.ps = new kakao.maps.services.Places();\n\n      // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n      this.infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\n      // 커스텀 오버레이를 생성합니다\n      this.customOverlay;\n      //주소-좌표 변환 객체를 생성합니다\n      this.geocoder = new kakao.maps.services.Geocoder();\n    },\n    async displayMarkers(places) {\n      var fragment = document.createDocumentFragment();\n      var bounds = new kakao.maps.LatLngBounds();\n      var listStr = \"\";\n      //console.log(places.length);\n      // 지도에 표시되고 있는 마커를 제거합니다\n      this.removeMarker();\n      var self = this;\n      for (var i = 0; i < places.length; i++) {\n        var placePosition = new kakao.maps.LatLng(places[i].lat, places[i].lng);\n        var marker = this.addMarker(placePosition, i);\n        var itemEl = this.getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n        //console.log(i);\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n        bounds.extend(placePosition);\n        // 마커와 검색결과 항목에 mouseover 했을때\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\n        // mouseout 했을 때는 인포윈도우를 닫습니다\n        (function (marker, title, code, place, map) {\n          kakao.maps.event.addListener(marker, \"click\", function () {\n            self.displayInfowindow(marker, title, place);\n          });\n\n          kakao.maps.event.addListener(map, \"click\", function () {\n            console.log(self.customOverlay);\n            self.customOverlay.setMap(null);\n          });\n\n          itemEl.onmouseover = function () {\n            self.displayInfowindow(marker, title);\n          };\n\n          itemEl.onmouseout = function () {\n            self.customOverlay.setMap(null);\n          };\n        })(marker, places[i].shopName, places[i].shopKind, places[i], this.map);\n\n        fragment.appendChild(itemEl);\n      }\n      // 마커를 생성하고 지도에 표시합니다\n\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n      this.map.setBounds(bounds);\n    },\n    addMarker(position, idx, title) {\n      var imageSrc =\n          \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\n        imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\n        imgOptions = {\n          spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n          offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n        },\n        markerImage = new kakao.maps.MarkerImage(\n          imageSrc,\n          imageSize,\n          imgOptions\n        ),\n        marker = new kakao.maps.Marker({\n          position: position, // 마커의 위치\n          image: markerImage,\n        });\n\n      marker.setMap(this.map); // 지도 위에 마커를 표출합니다\n      this.markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n      return marker;\n    },\n    removeMarker() {\n      for (var i = 0; i < this.markers.length; i++) {\n        this.markers[i].setMap(null);\n      }\n      this.markers = [];\n    },\n\n    getListItem(index, place) {\n      var el = document.createElement(\"li\");\n      var itemStr = `\n\t\t<span class=\"markerbg marker_${index + 1}></span>\n\t\t<div class=\"info\"><h5>${place.aptName}</h5> <button>관심등록</button>\n\t\t<span>${place.sidoName} ${place.gugunName} ${place.dongName} ${\n        place.jibun\n      }</span>\n\t`;\n      el.innerHTML = itemStr;\n      el.className = \"item\";\n\n      return el;\n    },\n\n    displayInfowindow(marker, title, place) {\n      var content = `\n\t\t<div class=\"overlaybox\">\n\t\t\t<div class=\"boxtitle\">${title}</div>\n\t\t\t<div class=\"first\"><img src=\"/img/apt.png\" style=\"width:247px; height:136px;\" alt=\"\"></div>\n\t\t\t<ul>\n\t\t\t\t<li class=\"up\">\n\t\t\t\t\t<span class=\"title\">이름</span>\n\t\t\t\t\t<span class=\"count\">${place.buildYear}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span class=\"title\">주소</span>\n\t\t\t\t\t<span class=\"count\">${place.roadAddress}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span class=\"title\">최신거래금액</span>\n\t\t\t\t\t<span class=\"count\">${place.recentPrice}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span class=\"last\" id=\"recenthistor\" data-toggle=\"modal\" data-target=\"#myModal\">아파트정보 update</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t`;\n      var position = new kakao.maps.LatLng(\n        marker.getPosition().getLat() + 0.00033,\n        marker.getPosition().getLng() - 0.00003\n      );\n      this.customOverlay = new kakao.maps.CustomOverlay({\n        position: position,\n        content: content,\n        xAnchor: 0.3,\n        yAnchor: 0.91,\n      });\n      this.customOverlay.setMap(this.map);\n    },\n    removeAllChildNods(el) {\n      while (el.hasChildNodes()) {\n        el.removeChild(el.lastChild);\n      }\n    },\n  },\n  computed: {\n    // gttters 이용\n    ...mapState([\"sidos\", \"guguns\", \"dongs\"]),\n    listGetters() {\n      return this.$store.getters.getShopList; // no getBoardList()\n    },\n  },\n};\n</script>\n<style scoped>\n.page-header {\n  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n    url(/public/img/shop.jpg) center center no-repeat;\n  background-size: cover;\n}\n\n.underline-orange {\n  display: inline-block;\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0) 70%,\n    rgba(231, 149, 27, 0.3) 30%\n  );\n}\n#logo {\n  width: 400px;\n}\n\n#map >>> .overlaybox {\n  position: relative;\n  width: 360px;\n  height: 350px;\n  background: url(\"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/box_movie.png\")\n    no-repeat;\n  padding: 15px 10px;\n}\n#map >>> .overlaybox div,\nul {\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n}\n#map >>> .overlaybox li {\n  list-style: none;\n}\n#map >>> .overlaybox .boxtitle {\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  background: url(\"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/arrow_white.png\")\n    no-repeat right 120px center;\n  margin-bottom: 8px;\n}\n#map >>> .overlaybox .first {\n  position: relative;\n  width: 247px;\n  height: 136px;\n  margin-bottom: 8px;\n}\n#map >>> .first .text {\n  color: #fff;\n  font-weight: bold;\n}\n#map >>> .first .triangle {\n  position: absolute;\n  width: 48px;\n  height: 48px;\n  top: 0;\n  left: 0;\n  background: url(\"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/triangle.png\")\n    no-repeat;\n  padding: 6px;\n  font-size: 18px;\n}\n#map >>> .first .movietitle {\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.4);\n  padding: 7px 15px;\n  font-size: 14px;\n}\n#map >>> .overlaybox ul {\n  width: 247px;\n}\n#map >>> .overlaybox li {\n  position: relative;\n  margin-bottom: 2px;\n  background: #2b2d36;\n  padding: 5px 10px;\n  color: #aaabaf;\n  line-height: 1;\n}\n#map >>> .overlaybox li span {\n  display: inline-block;\n}\n#map >>> .overlaybox li .number {\n  font-size: 16px;\n  font-weight: bold;\n}\n#map >>> .overlaybox li .title {\n  font-size: 13px;\n}\n#map >>> .overlaybox li .last {\n  font-size: 12px;\n  margin-right: 15px;\n}\n#map >>> .overlaybox ul .arrow {\n  position: absolute;\n  margin-top: 8px;\n  right: 25px;\n  width: 5px;\n  height: 3px;\n  background: url(\"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/updown.png\")\n    no-repeat;\n}\n#map >>> .overlaybox li .up {\n  background-position: 0 -40px;\n}\n#map >>> .overlaybox li .down {\n  background-position: 0 -60px;\n}\n#map >>> .overlaybox li .count {\n  position: absolute;\n  margin-top: 5px;\n  right: 15px;\n  font-size: 10px;\n}\n#map >>> .overlaybox li:hover {\n  color: #fff;\n  background: #d24545;\n}\n#map >>> .overlaybox li:hover .up {\n  background-position: 0 0px;\n}\n#map >>> .overlaybox li:hover .down {\n  background-position: 0 -20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}