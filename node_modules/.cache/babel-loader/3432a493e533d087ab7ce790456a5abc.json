{"ast":null,"code":"import _asyncToGenerator from \"C:/SSAFY/workspace/vuejs/happyhouse_final/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/SSAFY/workspace/vuejs/happyhouse_final/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nimport HouseList from \"@/components/house/HouseList.vue\"; //import HouseDetail from \"@/components/house/HouseDetail.vue\";\n\nexport default {\n  name: \"HouseSearchBar\",\n  components: {\n    HouseList: HouseList // HouseDetail,\n\n  },\n  data: function data() {\n    return {\n      sidoCode: null,\n      gugunCode: null,\n      dongCode: null,\n      markers: [],\n      map: null,\n      ps: null,\n      infowindow: null,\n      customOverlay: null,\n      geocoder: null,\n      key: \"aptName\",\n      word: \"\"\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      var script = document.createElement(\"script\");\n      /* global kakao */\n\n      script.onload = function () {\n        return kakao.maps.load(_this.initMap);\n      };\n\n      script.src = \"http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=034dcc5ce4d542a740e6d5514a14db3e&libraries=services\";\n      document.head.appendChild(script);\n    }\n  },\n  computed: _objectSpread({}, mapState([\"sidos\", \"guguns\", \"houses\", \"dongs\"])),\n  created: function created() {\n    // this.$store.dispatch(\"getSido\");\n    // this.sidoList();\n    this.CLEAR_SIDO_LIST();\n    this.getSido();\n    this.CLEAR_GUGUN_LIST();\n    this.CLEAR_DONG_LIST();\n    this.gugunCode = null;\n    this.dongCode = null;\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions([\"getSido\", \"getGugun\", \"getDong\", \"getHouseList\"])), mapMutations([\"CLEAR_SIDO_LIST\", \"CLEAR_GUGUN_LIST\", \"CLEAR_DONG_LIST\"])), {}, {\n    // sidoList() {\n    //   this.getSido();\n    // },\n    searchClear: function searchClear() {\n      console.log(this.word);\n      this.word = \"\";\n    },\n    gugunList: function gugunList() {\n      console.log(this.sidoCode);\n      this.CLEAR_GUGUN_LIST();\n      this.CLEAR_DONG_LIST();\n      this.gugunCode = null;\n      this.dongCode = null;\n      if (this.sidoCode) this.getGugun(this.sidoCode);\n    },\n    dongList: function dongList() {\n      console.log(this.gugunCode, \"??\");\n      this.CLEAR_DONG_LIST();\n      console.log(this.gugunCode, \"??\");\n      this.dongCode = null;\n\n      if (this.gugunCode) {\n        this.getDong(this.gugunCode);\n      }\n    },\n    searchApt: function searchApt() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var params;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = {\n                  dong: _this2.dongCode,\n                  key: _this2.key,\n                  word: _this2.word\n                };\n\n                if (!_this2.dongCode) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 4;\n                return _this2.getHouseList(params);\n\n              case 4:\n                _this2.displayMarkers(_this2.$store.getters.getAptList);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    initMap: function initMap() {\n      // 마커를 담을 배열입니다\n      //var markers = [];\n      var mapContainer = document.getElementById(\"map\"); // 지도를 표시할 div\n\n      var mapOption = {\n        center: new kakao.maps.LatLng(37.566826, 126.9786567),\n        // 지도의 중심좌표\n        level: 3 // 지도의 확대 레벨\n\n      }; // 지도를 생성합니다\n\n      this.map = new kakao.maps.Map(mapContainer, mapOption); // 장소 검색 객체를 생성합니다\n\n      this.ps = new kakao.maps.services.Places(); // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n\n      this.infowindow = new kakao.maps.InfoWindow({\n        zIndex: 1\n      }); // 커스텀 오버레이를 생성합니다\n\n      this.customOverlay; //주소-좌표 변환 객체를 생성합니다\n\n      this.geocoder = new kakao.maps.services.Geocoder();\n    },\n    displayMarkers: function displayMarkers(places) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var fragment, bounds, listStr, self, i, placePosition, marker, itemEl;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fragment = document.createDocumentFragment();\n                bounds = new kakao.maps.LatLngBounds();\n                listStr = \"\"; //console.log(places.length);\n                // 지도에 표시되고 있는 마커를 제거합니다\n\n                _this3.removeMarker();\n\n                self = _this3;\n\n                for (i = 0; i < places.length; i++) {\n                  placePosition = new kakao.maps.LatLng(places[i].lat, places[i].lng);\n                  marker = _this3.addMarker(placePosition, i);\n                  itemEl = _this3.getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n                  //console.log(i);\n                  // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n                  // LatLngBounds 객체에 좌표를 추가합니다\n\n                  bounds.extend(placePosition); // 마커와 검색결과 항목에 mouseover 했을때\n                  // 해당 장소에 인포윈도우에 장소명을 표시합니다\n                  // mouseout 했을 때는 인포윈도우를 닫습니다\n\n                  (function (marker, title, code, place, map) {\n                    kakao.maps.event.addListener(marker, \"click\", function () {\n                      self.displayInfowindow(marker, title, place);\n                    });\n                    kakao.maps.event.addListener(map, \"click\", function () {\n                      console.log(self.customOverlay);\n                      self.customOverlay.setMap(null);\n                    });\n\n                    itemEl.onmouseover = function () {\n                      self.displayInfowindow(marker, title);\n                    };\n\n                    itemEl.onmouseout = function () {\n                      self.customOverlay.setMap(null);\n                    };\n                  })(marker, places[i].shopName, places[i].shopKind, places[i], _this3.map);\n\n                  fragment.appendChild(itemEl);\n                } // 마커를 생성하고 지도에 표시합니다\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\n\n                _this3.map.setBounds(bounds);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    addMarker: function addMarker(position, idx, title) {\n      var imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\",\n          // 마커 이미지 url, 스프라이트 이미지를 씁니다\n      imageSize = new kakao.maps.Size(36, 37),\n          // 마커 이미지의 크기\n      imgOptions = {\n        spriteSize: new kakao.maps.Size(36, 691),\n        // 스프라이트 이미지의 크기\n        spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10),\n        // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n        offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\n      },\n          markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n          marker = new kakao.maps.Marker({\n        position: position,\n        // 마커의 위치\n        image: markerImage\n      });\n      marker.setMap(this.map); // 지도 위에 마커를 표출합니다\n\n      this.markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n      return marker;\n    },\n    removeMarker: function removeMarker() {\n      for (var i = 0; i < this.markers.length; i++) {\n        this.markers[i].setMap(null);\n      }\n\n      this.markers = [];\n    },\n    getListItem: function getListItem(index, place) {\n      var el = document.createElement(\"li\");\n      var itemStr = \"\\n\\t\\t<span class=\\\"markerbg marker_\".concat(index + 1, \"></span>\\n\\t\\t<div class=\\\"info\\\"><h5>\").concat(place.aptName, \"</h5> <button>\\uAD00\\uC2EC\\uB4F1\\uB85D</button>\\n\\t\\t<span>\").concat(place.sidoName, \" \").concat(place.gugunName, \" \").concat(place.dongName, \" \").concat(place.jibun, \"</span>\\n\\t\");\n      el.innerHTML = itemStr;\n      el.className = \"item\";\n      return el;\n    },\n    displayInfowindow: function displayInfowindow(marker, title, place) {\n      var content = \"\\n\\t\\t<div class=\\\"overlaybox\\\">\\n\\t\\t\\t<div class=\\\"boxtitle\\\">\".concat(title, \"</div>\\n\\t\\t\\t<div class=\\\"first\\\"><img src=\\\"/img/apt.png\\\" style=\\\"width:247px; height:136px;\\\" alt=\\\"\\\"></div>\\n\\t\\t\\t<ul>\\n\\t\\t\\t\\t<li class=\\\"up\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"title\\\">\\uC774\\uB984</span>\\n\\t\\t\\t\\t\\t<span class=\\\"count\\\">\").concat(place.buildYear, \"</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<span class=\\\"title\\\">\\uC8FC\\uC18C</span>\\n\\t\\t\\t\\t\\t<span class=\\\"count\\\">\").concat(place.roadAddress, \"</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<span class=\\\"title\\\">\\uCD5C\\uC2E0\\uAC70\\uB798\\uAE08\\uC561</span>\\n\\t\\t\\t\\t\\t<span class=\\\"count\\\">\").concat(place.recentPrice, \"</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t<span class=\\\"last\\\" id=\\\"recenthistor\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\uC544\\uD30C\\uD2B8\\uC815\\uBCF4 update</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t\");\n      var position = new kakao.maps.LatLng(marker.getPosition().getLat() + 0.00033, marker.getPosition().getLng() - 0.00003);\n      this.customOverlay = new kakao.maps.CustomOverlay({\n        position: position,\n        content: content,\n        xAnchor: 0.3,\n        yAnchor: 0.91\n      });\n      this.customOverlay.setMap(this.map);\n    },\n    removeAllChildNods: function removeAllChildNods(el) {\n      while (el.hasChildNodes()) {\n        el.removeChild(el.lastChild);\n      }\n    }\n  })\n};","map":{"version":3,"mappings":"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","names":["name","components","HouseList","data","sidoCode","gugunCode","dongCode","markers","map","ps","infowindow","customOverlay","geocoder","key","word","mounted","script","document","computed","mapState","created","methods","mapActions","mapMutations","searchClear","console","gugunList","dongList","searchApt","params","dong","initMap","center","level","zIndex","displayMarkers","places","fragment","bounds","listStr","self","placePosition","marker","itemEl","kakao","addMarker","position","idx","title","imageSize","imgOptions","spriteSize","spriteOrigin","offset","markerImage","imageSrc","image","removeMarker","getListItem","index","place","el","displayInfowindow","content","xAnchor","yAnchor","removeAllChildNods"],"sourceRoot":"src/components/house","sources":["HouseSearchBar.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid box-all p-0\">\n    <div class=\"search-all\">\n      <div class=\"search-left\">\n        <b-row class=\"mt-2 mb-2 text-center\">\n          <div class=\"col-sm-4\">\n            <select\n              class=\"form-select\"\n              aria-label=\"Default select example\"\n              v-model=\"key\"\n            >\n              <option value=\"aptName\">아파트 명</option>\n              <option value=\"buildyear\">건축년도</option>\n              <option value=\"dealAmount\">거래금액</option>\n              <option value=\"area\">넓이</option>\n            </select>\n          </div>\n          <div class=\"col-sm-5\">\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              placeholder=\"Search\"\n              v-model=\"word\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary col-sm-3\"\n            @click=\"searchApt\"\n          >\n            검색\n          </button>\n        </b-row>\n      </div>\n      <div class=\"search-right\">\n        <div class=\"mt-2 mb-2 text-center\">\n          <div style=\"display: inline-block\" class=\"m-2\">\n            <b-form-select\n              class=\"form-select\"\n              v-model=\"sidoCode\"\n              :options=\"sidos\"\n              @change=\"gugunList\"\n            ></b-form-select>\n          </div>\n          <div style=\"display: inline-block\" class=\"m-2\">\n            <b-form-select\n              class=\"form-select\"\n              v-model=\"gugunCode\"\n              :options=\"guguns\"\n              @change=\"dongList\"\n            ></b-form-select>\n          </div>\n          <div style=\"display: inline-block\" class=\"m-2\">\n            <b-form-select\n              class=\"form-select\"\n              v-model=\"dongCode\"\n              :options=\"dongs\"\n              @change=\"[searchClear(), searchApt()]\"\n            ></b-form-select>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"content-all\">\n      <div class=\"content-left\">\n        <div style=\"height: 1000px; margin-bottom: 2%; overflow: auto\">\n          <house-list />\n        </div>\n      </div>\n      <div class=\"content-right\">\n        <div id=\"map\" style=\"width: 100%; height: 1000px\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nimport HouseList from \"@/components/house/HouseList.vue\";\n//import HouseDetail from \"@/components/house/HouseDetail.vue\";\nexport default {\n  name: \"HouseSearchBar\",\n  components: {\n    HouseList,\n    // HouseDetail,\n  },\n  data() {\n    return {\n      sidoCode: null,\n      gugunCode: null,\n      dongCode: null,\n      markers: [],\n      map: null,\n      ps: null,\n      infowindow: null,\n      customOverlay: null,\n      geocoder: null,\n      key: \"aptName\",\n      word: \"\",\n    };\n  },\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      script.src =\n        \"http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=034dcc5ce4d542a740e6d5514a14db3e&libraries=services\";\n      document.head.appendChild(script);\n    }\n  },\n  computed: {\n    ...mapState([\"sidos\", \"guguns\", \"houses\", \"dongs\"]),\n    // sidos() {\n    //   return this.$store.state.sidos;\n    // },\n  },\n  created() {\n    // this.$store.dispatch(\"getSido\");\n    // this.sidoList();\n    this.CLEAR_SIDO_LIST();\n    this.getSido();\n    this.CLEAR_GUGUN_LIST();\n    this.CLEAR_DONG_LIST();\n    this.gugunCode = null;\n    this.dongCode = null;\n  },\n  methods: {\n    ...mapActions([\"getSido\", \"getGugun\", \"getDong\", \"getHouseList\"]),\n    ...mapMutations([\"CLEAR_SIDO_LIST\", \"CLEAR_GUGUN_LIST\", \"CLEAR_DONG_LIST\"]),\n    // sidoList() {\n    //   this.getSido();\n    // },\n    searchClear() {\n      console.log(this.word);\n      this.word = \"\";\n    },\n    gugunList() {\n      console.log(this.sidoCode);\n      this.CLEAR_GUGUN_LIST();\n      this.CLEAR_DONG_LIST();\n      this.gugunCode = null;\n      this.dongCode = null;\n      if (this.sidoCode) this.getGugun(this.sidoCode);\n    },\n    dongList() {\n      console.log(this.gugunCode, \"??\");\n      this.CLEAR_DONG_LIST();\n      console.log(this.gugunCode, \"??\");\n      this.dongCode = null;\n      if (this.gugunCode) {\n        this.getDong(this.gugunCode);\n      }\n    },\n    async searchApt() {\n      const params = {\n        dong: this.dongCode,\n        key: this.key,\n        word: this.word,\n      };\n      if (this.dongCode) {\n        await this.getHouseList(params);\n        this.displayMarkers(this.$store.getters.getAptList);\n      }\n    },\n    initMap() {\n      // 마커를 담을 배열입니다\n      //var markers = [];\n\n      var mapContainer = document.getElementById(\"map\"); // 지도를 표시할 div\n      var mapOption = {\n        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\n        level: 3, // 지도의 확대 레벨\n      };\n\n      // 지도를 생성합니다\n      this.map = new kakao.maps.Map(mapContainer, mapOption);\n\n      // 장소 검색 객체를 생성합니다\n      this.ps = new kakao.maps.services.Places();\n\n      // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n      this.infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\n      // 커스텀 오버레이를 생성합니다\n      this.customOverlay;\n      //주소-좌표 변환 객체를 생성합니다\n      this.geocoder = new kakao.maps.services.Geocoder();\n    },\n    async displayMarkers(places) {\n      var fragment = document.createDocumentFragment();\n      var bounds = new kakao.maps.LatLngBounds();\n      var listStr = \"\";\n      //console.log(places.length);\n      // 지도에 표시되고 있는 마커를 제거합니다\n      this.removeMarker();\n      var self = this;\n      for (var i = 0; i < places.length; i++) {\n        var placePosition = new kakao.maps.LatLng(places[i].lat, places[i].lng);\n        var marker = this.addMarker(placePosition, i);\n        var itemEl = this.getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n        //console.log(i);\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n        bounds.extend(placePosition);\n        // 마커와 검색결과 항목에 mouseover 했을때\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\n        // mouseout 했을 때는 인포윈도우를 닫습니다\n        (function (marker, title, code, place, map) {\n          kakao.maps.event.addListener(marker, \"click\", function () {\n            self.displayInfowindow(marker, title, place);\n          });\n\n          kakao.maps.event.addListener(map, \"click\", function () {\n            console.log(self.customOverlay);\n            self.customOverlay.setMap(null);\n          });\n\n          itemEl.onmouseover = function () {\n            self.displayInfowindow(marker, title);\n          };\n\n          itemEl.onmouseout = function () {\n            self.customOverlay.setMap(null);\n          };\n        })(marker, places[i].shopName, places[i].shopKind, places[i], this.map);\n\n        fragment.appendChild(itemEl);\n      }\n      // 마커를 생성하고 지도에 표시합니다\n\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n      this.map.setBounds(bounds);\n    },\n    addMarker(position, idx, title) {\n      var imageSrc =\n          \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\n        imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\n        imgOptions = {\n          spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n          offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n        },\n        markerImage = new kakao.maps.MarkerImage(\n          imageSrc,\n          imageSize,\n          imgOptions\n        ),\n        marker = new kakao.maps.Marker({\n          position: position, // 마커의 위치\n          image: markerImage,\n        });\n\n      marker.setMap(this.map); // 지도 위에 마커를 표출합니다\n      this.markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n      return marker;\n    },\n    removeMarker() {\n      for (var i = 0; i < this.markers.length; i++) {\n        this.markers[i].setMap(null);\n      }\n      this.markers = [];\n    },\n\n    getListItem(index, place) {\n      var el = document.createElement(\"li\");\n      var itemStr = `\n\t\t<span class=\"markerbg marker_${index + 1}></span>\n\t\t<div class=\"info\"><h5>${place.aptName}</h5> <button>관심등록</button>\n\t\t<span>${place.sidoName} ${place.gugunName} ${place.dongName} ${\n        place.jibun\n      }</span>\n\t`;\n      el.innerHTML = itemStr;\n      el.className = \"item\";\n\n      return el;\n    },\n\n    displayInfowindow(marker, title, place) {\n      var content = `\n\t\t<div class=\"overlaybox\">\n\t\t\t<div class=\"boxtitle\">${title}</div>\n\t\t\t<div class=\"first\"><img src=\"/img/apt.png\" style=\"width:247px; height:136px;\" alt=\"\"></div>\n\t\t\t<ul>\n\t\t\t\t<li class=\"up\">\n\t\t\t\t\t<span class=\"title\">이름</span>\n\t\t\t\t\t<span class=\"count\">${place.buildYear}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span class=\"title\">주소</span>\n\t\t\t\t\t<span class=\"count\">${place.roadAddress}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span class=\"title\">최신거래금액</span>\n\t\t\t\t\t<span class=\"count\">${place.recentPrice}</span>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<span class=\"last\" id=\"recenthistor\" data-toggle=\"modal\" data-target=\"#myModal\">아파트정보 update</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t`;\n      var position = new kakao.maps.LatLng(\n        marker.getPosition().getLat() + 0.00033,\n        marker.getPosition().getLng() - 0.00003\n      );\n      this.customOverlay = new kakao.maps.CustomOverlay({\n        position: position,\n        content: content,\n        xAnchor: 0.3,\n        yAnchor: 0.91,\n      });\n      this.customOverlay.setMap(this.map);\n    },\n    removeAllChildNods(el) {\n      while (el.hasChildNodes()) {\n        el.removeChild(el.lastChild);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n::-webkit-scrollbar {\n  width: 10px;\n}\n::-webkit-scrollbar-thumb {\n  background-color: #eaa636;\n  border-radius: 10px;\n  background-clip: padding-box;\n  border: 2px solid transparent;\n}\n::-webkit-scrollbar-track {\n  border-radius: 10px;\n  box-shadow: inset 0px 0px 5px white;\n}\n.box-all >>> .search-all {\n  flex: 0 0 auto;\n  display: flex;\n  width: 100%;\n  height: 64px;\n  border-bottom: 1px solid rgb(205, 205, 205);\n  background-color: rgb(255, 255, 255);\n  z-index: 900;\n}\ndiv >>> .search-left {\n  flex: 0 0 auto;\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  width: 400px;\n  height: 100%;\n  padding: 0px 20px;\n  border-right: 1px solid rgb(231, 231, 231);\n  position: relative;\n}\ndiv >>> .search-right {\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n\n  height: 100%;\n  padding: 0px 12px 0px 8px;\n}\n.box-all >>> .content-all {\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  display: flex;\n  width: 100%;\n  height: calc(100% - 149px);\n  position: relative;\n}\ndiv >>> .content-left {\n  flex: 0 0 auto;\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  height: 100%;\n  border-right: 1px solid rgb(231, 231, 231);\n  position: relative;\n  overflow: hidden;\n}\ndiv >>> .content-right {\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  position: relative;\n  z-index: 10;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}